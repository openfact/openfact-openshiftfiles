kind: Template
apiVersion: v1
labels:
  template: keycloak-ephemeral
metadata:
  annotations:
    description: Application template for Keycloak 2.5.5.Final
    iconClass: icon-wildfly
    tags: keycloak,java,wildfly,jboss
    version: 1.0.0.Final
    openshift.io/display-name: Keycloak 2.5.5.Final
  name: keycloak
message: "A new Keycloak service has been created in your project.\n\n Keycloak Server (Master Realm)\n--------------------\n- Username: ${KEYCLOAK_ADMIN_USER}\n- Password: ${KEYCLOAK_ADMIN_PASSWORD}"
objects:
- kind: Route
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}-ephemeral
  spec:
    to:
      kind: Service
      name: ${APPLICATION_NAME}
- kind: Service
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}-ephemeral
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      targetPort: 8080
      protocol: TCP
    selector:
      app: ${APPLICATION_NAME}-ephemeral
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}-ephemeral
  spec:
    strategy:
      type: Rolling
      rollingParams:
        timeoutSeconds: 10800
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
    replicas: 1
    selector:
      app: ${APPLICATION_NAME}-ephemeral
    template:
      metadata:
        name: ${APPLICATION_NAME}
        labels:
          app: ${APPLICATION_NAME}-ephemeral
      spec:
        containers:
        - name: ${APPLICATION_NAME}
          image: ${APPLICATION_NAME}:latest
          imagePullPolicy: Always
          lifecycle:
            preStop:
              exec:
                command:
                - "/opt/jboss/keycloak/bin/jboss-cli.sh"
                - "-c"
                - ":shutdown(timeout=60)"
          ports:
          - name: 8080-http
            containerPort: 8080
            protocol: TCP
          env:
          - name: KEYCLOAK_USER
            valueFrom:
              secretKeyRef:
                name: ${APPLICATION_NAME}
                key: admin-user
          - name: KEYCLOAK_PASSWORD
            valueFrom:
              secretKeyRef:
                name: ${APPLICATION_NAME}
                key: admin-password
        terminationGracePeriodSeconds: 75
        restartPolicy: Always
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}-ephemeral
  spec:
    dockerImageRepository: openfact/keycloak
- kind: Secret
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
  stringData:
    admin-user: ${KEYCLOAK_ADMIN_USER}
    admin-password: ${KEYCLOAK_ADMIN_PASSWORD}
parameters:
- displayName: Application Name
  description: The name for the application.
  name: APPLICATION_NAME
  value: keycloak
  required: true
- displayName: Keycloak Admin Username
  description: Keycloak Server admin username
  name: KEYCLOAK_ADMIN_USER
  from: "[a-zA-Z0-9]{8}"
  generate: expression
  required: true
- displayName: Keycloak Admin Password
  description: Keycloak Server admin  password
  name: KEYCLOAK_ADMIN_PASSWORD
  from: "[a-zA-Z0-9]{8}"
  generate: expression
  required: true