apiVersion: v1
kind: Template
labels:
  template: s2i-wildfly-keycloak-adapter
metadata:
  annotations:
    description: Application template for s2i-wildfly-keycloak-adapter
    iconClass: icon-java
    tags: s2i,keycloak,sso,java,wildfly,jboss
    version: 1.0.0.Final
    openshift.io/display-name: s2i-wildfly-keycloak-adapter
  name: s2i-wildfly-keycloak-adapter
message: A new Service called ${APPLICATION_NAME} has been created in your project
objects:
  - kind: Route
    apiVersion: v1
    metadata:
      labels:
        app: ${APPLICATION_NAME}
        group: org.keycloak
      name: ${APPLICATION_NAME}
    spec:
      to:
        kind: Service
        name: ${APPLICATION_NAME}
  - kind: Route
    apiVersion: v1
    metadata:
      labels:
        app: ${APPLICATION_NAME}
        group: org.keycloak
      name: secure-${APPLICATION_NAME}
    spec:
      to:
        kind: Service
        name: secure-${APPLICATION_NAME}
      tls:
        termination: passthrough
  - kind: Service
    apiVersion: v1
    metadata:
      labels:
        app: ${APPLICATION_NAME}
        group: org.keycloak
      name: ${APPLICATION_NAME}    
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        deploymentconfig: ${APPLICATION_NAME}
  - kind: Service
    apiVersion: v1
    metadata:
      labels:
        app: ${APPLICATION_NAME}
        group: org.keycloak
      name: secure-${APPLICATION_NAME}    
    spec:
      ports:
        - name: 8443-tcp
          port: 8443
          protocol: TCP
          targetPort: 8443
      selector:
        deploymentconfig: ${APPLICATION_NAME}
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
        group: org.keycloak
    spec:
      strategy:
        type: Rolling
        rollingParams:
          timeoutSeconds: 10800
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
            - ${APPLICATION_NAME}
            from:
              kind: ImageStreamTag
              name: ${APPLICATION_NAME}:latest
      replicas: 1
      selector:
        app: ${APPLICATION_NAME}
        deploymentconfig: ${APPLICATION_NAME}
      template:
        metadata:
          name: ${APPLICATION_NAME}
          labels:
            app: ${APPLICATION_NAME}
            group: org.keycloak
            deploymentconfig: ${APPLICATION_NAME}
        spec:
          containers:
            - name: ${APPLICATION_NAME}
              image: ${APPLICATION_NAME}
              imagePullPolicy: Always
              lifecycle:
                preStop:
                  exec:
                    command:
                      - "/wildfly/bin/jboss-cli.sh"
                      - "-c"
                      - ":shutdown(timeout=60)"
              ports:
                - name: 8080-tcp
                  containerPort: 8080
                  protocol: TCP
              volumeMounts:
                - name: ${APPLICATION_NAME}-pvol
                  mountPath: /etc/wildfly-secret-volume
                  readOnly: true
              env:
                - name: EXAMPLE_DATASOURCE
                  value: ${EXAMPLE_DATASOURCE}          
                - name: KEYCLOAK_SECURE_DEPLOYMENT
                  value: ${KEYCLOAK_SECURE_DEPLOYMENT}  
                - name: KEYCLOAK_AUTH_SERVER_URL
                  value: ${KEYCLOAK_AUTH_SERVER_URL}
                - name: KEYCLOAK_REALM
                  value: ${KEYCLOAK_REALM}
                - name: KEYCLOAK_RESOURCE
                  value: ${KEYCLOAK_RESOURCE}
                - name: KEYCLOAK_BEARER_ONLY
                  value: ${KEYCLOAK_BEARER_ONLY}
                - name: KEYCLOAK_SSL_REQUIRED
                  value: ${KEYCLOAK_SSL_REQUIRED}
                - name: KEYCLOAK_USE_RESOURCE_ROLE_MAPPINGS
                  value: ${KEYCLOAK_USE_RESOURCE_ROLE_MAPPINGS}
                - name: KEYCLOAK_INITIAL_ACCESS_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: ${APPLICATION_NAME}
                      key: access-token
                - name: HTTPS_KEYSTORE_DIR
                  value: /etc/wildfly-secret-volume
                - name: HTTPS_KEYSTORE
                  value: ${HTTPS_KEYSTORE}
                - name: HTTPS_KEYSTORE_TYPE
                  value: ${HTTPS_KEYSTORE_TYPE}
                - name: HTTPS_NAME
                  value: ${HTTPS_NAME}
                - name: HTTPS_PASSWORD
                  value: ${HTTPS_PASSWORD}
          volumes:
            - name: ${APPLICATION_NAME}-pvol
              secret:
                secretName: ${HTTPS_SECRET}
          terminationGracePeriodSeconds: 75
          restartPolicy: Always
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: wildfly-keycloak-adapter-101-centos7
      labels:
        app: ${APPLICATION_NAME}
    spec:
      tags:
        - name: latest
          annotations:
            openshift.io/imported-from: carlosthe19916/wildfly-keycloak-adapter-101-centos7
          from:
            kind: DockerImage
            name: carlosthe19916/wildfly-keycloak-adapter-101-centos7
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
    spec: {}
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
    spec:
      source:
        type: Git
        git:        
          ref: ${GIT_REF}
          uri: ${GIT_URI}
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: wildfly-keycloak-adapter-101-centos7:latest
      output:
        to:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest  
      triggers:
        - type: GitHub
          github:
            secret: ${GITHUB_WEBHOOK_SECRET}
        - type: Generic
          generic:
            secret: ${GENERIC_WEBHOOK_SECRET}
        - type: ImageChange
        - type: ConfigChange
parameters:
  - description: Application Name
    displayName: Application Name
    name: APPLICATION_NAME
    value: openfact
    required: true
  - description: Git source URI for application
    displayName: Git source repository
    name: GIT_URI
    required: true
    value: https://github.com/openfact/openfact-pe.git
  - displayName: Git branch/tag reference
    name: GIT_REF
    value: master
    required: true
  - description: GitHub webhook secret
    displayName: GitHub Webhook Secret
    from: "[a-zA-Z0-9]{8}"
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
    required: true
  - description: Generic webhook secret
    displayName: Generic Webhook Secret
    from: "[a-zA-Z0-9]{8}"
    generate: expression
    name: GENERIC_WEBHOOK_SECRET
    required: true
  - description: Example Datasource Name. If null, the default is ExampleDS
    displayName: Example Datasource Name
    name: EXAMPLE_DATASOURCE
    value: OpenfacDS
    required: true

  - displayName: Server Keystore Secret Name
    description: The name of the secret containing the keystore file
    name: HTTPS_SECRET
    value: wildfly-app-secret
    required: true
  - displayName: Server Keystore Filename
    description: The name of the keystore file within the secret
    name: HTTPS_KEYSTORE
    value: keystore.jks
    required: false
  - displayName: Server Keystore Type
    description: The type of the keystore file (JKS or JCEKS)
    name: HTTPS_KEYSTORE_TYPE
    value: ""
  - displayName: Server Certificate Name
    description: The name associated with the server certificate
    name: HTTPS_NAME
    value: ""
    required: false
  - displayName: Server Keystore Password
    description: The password for the keystore and certificate
    name: HTTPS_PASSWORD
    value: ""
    required: false

  - description: War name to be added to <secure-deployment name="mywar.war">..(e.g. ROOT.war)
    displayName: War File Name
    name: KEYCLOAK_SECURE_DEPLOYMENT
    value: ROOT
    required: false
  - description: URL of your Keycloak Server (e.g. https://mydomain.com/auth)
    displayName: Keycloak Server URL
    name: KEYCLOAK_AUTH_SERVER_URL
    required: true
  - description: Realm to be created in the Keycloak server (e.g. demo).
    displayName: Keycloak Realm
    name: KEYCLOAK_REALM
    required: true
  - description: The client-id of the application. Each application has a client-id that is used to identify the application
    displayName: Resource (Client-id)
    name: KEYCLOAK_RESOURCE
    value: openfact
    required: true
  - description: This should be set to true for services. If enabled the adapter will not attempt to authenticate users, but only verify bearer tokens
    displayName: Bearer Only (bearer-only)
    name: KEYCLOAK_BEARER_ONLY
    value: "true"
    required: true
  - description: Ensures that all communication to and from the Keycloak server is over correct HTTPS
    displayName: SSL Required. Valid values are 'all', 'external' and 'none'.
    name: KEYCLOAK_SSL_REQUIRED
    value: external
    required: true
  - description: If set to true, the adapter will look inside the token for application level role mappings for the user. If false, it will look at the realm level for user role mappings.
    displayName: Use Resource Role Mappings
    name: KEYCLOAK_USE_RESOURCE_ROLE_MAPPINGS
    value: "true"
    required: true
  - description: If set to true, then cors will be activated
    displayName: Enable cors
    name: KEYCLOAK_ENABLE_CORS
    value: "true"
    required: true
  - description: An initial access token can to be used to create a client on the realm you specified.
    displayName: Keycloak Initial Access Token
    name: KEYCLOAK_INITIAL_ACCESS_TOKEN
    required: false