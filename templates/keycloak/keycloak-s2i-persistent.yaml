apiVersion: v1
kind: Template
labels:
  template: keycloak-s2i
metadata:
  annotations:
    description: Application template for keycloak-s2i
    iconClass: icon-java
    tags: openfact,nodejs,ubl
    version: 1.0.0.Final
    openshift.io/display-name: keycloak-s2i
  name: keycloak-s2i
message: A new ${APPLICATION_NAME} has been created in your project
objects:
- kind: Route
  apiVersion: v1
  metadata:
    labels:
      app: ${APPLICATION_NAME}
      group: org.keycloak
    name: ${APPLICATION_NAME}
  spec:
    to:
      kind: Service
      name: ${APPLICATION_NAME}
- kind: Service
  apiVersion: v1
  metadata:
    labels:
      app: ${APPLICATION_NAME}
      group: org.keycloak
    name: ${APPLICATION_NAME}
    annotations:
      service.alpha.openshift.io/dependencies: "[{\"name\": \"${DATABASE_SERVICE_NAME}\", \"kind\": \"Service\"}]"
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: ${APPLICATION_NAME}
- kind: Service
  apiVersion: v1
  metadata:
    labels:
      app: ${DATABASE_SERVICE_NAME}
      group: org.keycloak
    name: ${DATABASE_SERVICE_NAME}
  spec:
    ports:
    - name: 5432-tcp
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      deploymentconfig: ${DATABASE_SERVICE_NAME}
    type: ClusterIP
    sessionAffinity: None
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
      group: org.keycloak
  spec:
    strategy:
      type: Rolling
      rollingParams:
        timeoutSeconds: 10800
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
    replicas: 1
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    template:
      metadata:
        name: ${APPLICATION_NAME}
        labels:
          app: ${APPLICATION_NAME}
          group: org.keycloak
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        containers:
        - name: ${APPLICATION_NAME}
          image: ${APPLICATION_NAME}
          imagePullPolicy: Always
          lifecycle:
            preStop:
              exec:
                command:
                - "/opt/jboss/keycloak/bin/jboss-cli.sh"
                - "-c"
                - ":shutdown(timeout=60)"
          ports:
          - name: 8080-tcp
            containerPort: 8080
            protocol: TCP
          env:
          - name: POSTGRESQL_SERVICE_HOST 
            value: ${DATABASE_SERVICE_NAME}
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                name: ${DATABASE_SERVICE_NAME}
                key: database-user
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: ${DATABASE_SERVICE_NAME}
                key: database-password
        terminationGracePeriodSeconds: 75
        restartPolicy: Always
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: ${DATABASE_SERVICE_NAME}
    labels:
      app: ${DATABASE_SERVICE_NAME}
      group: org.keycloak
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${DATABASE_SERVICE_NAME}
        from:
          kind: ImageStreamTag
          name: postgresql:${POSTGRESQL_VERSION}
          namespace: ${NAMESPACE}  
    replicas: 1
    selector:
      app: ${DATABASE_SERVICE_NAME}
    template:
      metadata:
        name: ${DATABASE_SERVICE_NAME}
        labels:
          app: ${DATABASE_SERVICE_NAME}
          group: org.keycloak
      spec:
        terminationGracePeriodSeconds: 60
        restartPolicy: Always
        dnsPolicy: ClusterFirst
        containers:
        - name: ${DATABASE_SERVICE_NAME}
          image: postgresql
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 5
            exec:
              command:
              - "/bin/sh"
              - "-i"
              - "-c"
              - "psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"
          livenessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 30
            tcpSocket:
              port: 5432
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: ${DATABASE_SERVICE_NAME}-pvol
          env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                name: ${DATABASE_SERVICE_NAME}
                key: database-user
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: ${DATABASE_SERVICE_NAME}
                key: database-password
          - name: POSTGRESQL_DATABASE
            value: ${DB_DATABASE}
          terminationMessagePath: /dev/termination-log          
          securityContext:            
            privileged: false
        volumes:
        - name: ${DATABASE_SERVICE_NAME}-pvol
          persistentVolumeClaim:
            claimName: ${DATABASE_SERVICE_NAME}-claim
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: s2i-keycloak
    labels:
      app: ${APPLICATION_NAME}
  spec:
    tags:
    - name: latest
      annotations:
        openshift.io/imported-from: openfact/s2i-keycloak
      from:
        kind: DockerImage
        name: openfact/s2i-keycloak
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
  spec: {}
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
  spec:
    source:
      type: Git
      git:
        uri: ${GIT_REPO}
        ref: master
    strategy:
      type: Source
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: s2i-keycloak:latest
        env:
        - name: POSTGRESQL_DATABASE
          value: true
        - name: OPENSHIFT_POSTGRESQL_DATASOURCE
          value: ${DATASOURCE_NAME}
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest  
    triggers:
    - type: GitHub
      github:
        secret: 52SM2bSykCPjly44uNjy
    - type: Generic
      generic:
        secret: Oe9qdANPg0zXDb1stZyi
    - type: ImageChange
      imageChange: {}
    - type: ConfigChange
- kind: Secret
  apiVersion: v1
  metadata:
    name: ${DATABASE_SERVICE_NAME}
    labels:
      app: ${DATABASE_SERVICE_NAME}
      group: org.keycloak
  stringData:
    database-user: ${DB_USERNAME}
    database-password: ${DB_PASSWORD}
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: ${DATABASE_SERVICE_NAME}-claim
    labels:
      app: ${DATABASE_SERVICE_NAME}
      group: org.keycloak
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}
    volumeName: ${PERSISTENT_VOLUME_NAME}
parameters:
- description: Application Name
  displayName: Application Name
  name: APPLICATION_NAME
  value: openfact
  required: true
- description: Git Repo
  displayName: Git repo
  name: GIT_REPO
  value: https://github.com/openfact/openfact.git
  required: true
- displayName: Database Service Name
  name: DATABASE_SERVICE_NAME
  value: keycloak-postgresql
  required: true
- displayName: Database Volume Capacity
  description: Size of persistent storage for database volume.
  name: VOLUME_CAPACITY
  value: "512Mi"
  required: true
- displayName: ImageStream Namespace
  description: Namespace in which the ImageStreams for Red Hat Middleware images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.
  name: NAMESPACE
  value: openshift
  required: true
- displayName: PostgreSQL Image Version
  description: The version of the PostgreSQL image
  name: POSTGRESQL_VERSION
  value: "9.5"
  required": true
- displayName: Datasource Name
  description: Datasource Name
  name: DATASOURCE_NAME
  value: OpenfactDS
  required: true
- displayName: Keycloak Database Name
  description: Database name
  name: DB_DATABASE
  value: keycloak
  required: true
- displayName: Database Username
  description: Database user name
  name: DB_USERNAME
  from: "user[a-zA-Z0-9]{3}"
  generate: expression
  required: true
- displayName: Database Password
  description: Database user password
  name: DB_PASSWORD
  from: "user[a-zA-Z0-9]{3}"
  generate: expression
  required: true
- displayName: Persistent Volume Name
  description: Persistent Volume Name
  name: PERSISTENT_VOLUME_NAME  
  required: false