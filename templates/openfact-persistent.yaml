apiVersion: v1
kind: Template
labels:
  template: openfact
metadata:
  annotations:
    description: Application template for Openfact
    iconClass: icon-wildfly
    tags: openfact,javascript,nodejs,java,wildfly,jboss,ubl
    version: 1.0.0.Final
    openshift.io/display-name: Openfact
  name: openfact
message: "A new Openfact has been created in your project Keycloak\n--------------------\n Admin Username: ${KEYCLOAK_ADMIN_USER}\n Admin Password: ${KEYCLOAK_ADMIN_PASSWORD}"
objects:
# Openfact-Web-Console
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: nodejs-6-centos7
    labels:
      app: openfact-web-console
  spec:
    tags:
    - name: latest
      annotations:
        openshift.io/imported-from: centos/nodejs-6-centos7
      from:
        kind: DockerImage
        name: centos/nodejs-6-centos7
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: openfact-web-console
    labels:
      app: openfact-web-console
  spec: {}
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: openfact-web-console
    labels:
      app: openfact-web-console
  spec:
    source:
      type: Git
      git:
        uri: https://github.com/openfact/openfact-web-console.git        
    strategy:
      type: Source
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: nodejs-6-centos7:latest
    output:
      to:
        kind: ImageStreamTag
        name: openfact-web-console:latest  
    triggers:
    - type: GitHub
      github:
        secret: 52SM2bSykCPjly44uNjy
    - type: Generic
      generic:
        secret: Oe9qdANPg0zXDb1stZyi
    - type: ImageChange
      imageChange: {}
    - type: ConfigChange
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: openfact-web-console
    labels:
      app: openfact-web-console
  spec:
    replicas: 1
    selector:
      app: openfact-web-console
      deploymentconfig: openfact-web-console
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources: {}
      activeDeadlineSeconds: 21600 
    template:
      metadata:
        labels:
          app: openfact-web-console
          deploymentconfig: openfact-web-console
        name: openfact-web-console
      spec:        
        containers:
        - name: openfact-web-console
          image: openfact-web-console
          imagePullPolicy: Always
          env:
          - name: KEYCLOAK_URL
            value: http://keycloak-${APPLICATION_NAME}.${DOMAIN_NAME}/auth
          - name: KEYCLOAK_REALM
            value: ${KEYCLOAK_REALM}          
          - name: KEYCLOAK_CLIENT_ID
            value: ${KEYCLOAK_CLIENT_ID}
          - name: KEYCLOAK_PUBLIC_KEY
            value: ${KEYCLOAK_PUBLIC_KEY}
          - name: OPENFACT_ENDPOINT
            value: http://openfact-${APPLICATION_NAME}.${DOMAIN_NAME}/openfact/rest
          - name: HOSTNAME_HTTP
            value: http://openfact-web-console-${APPLICATION_NAME}.${DOMAIN_NAME}
          ports:
          - name: 8080-http
            containerPort: 8080
            protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}          
          terminationMessagePath: /dev/termination-log
        restartPolicy: Always
        dnsPolicy: ClusterFirst
        securityContext: {}
        terminationGracePeriodSeconds: 30
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - openfact-web-console
        from:
          kind: ImageStreamTag
          name: openfact-web-console:latest      
    - type: ConfigChange
- kind: Service
  apiVersion: v1
  metadata:
    labels:
      app: openfact-web-console
      application: openfact-web-console
    name: openfact-web-console
  spec:
    ports:
    - name: 8080-tcp
      port: 8080      
      targetPort: 8080
      protocol: TCP
    selector:
      deploymentconfig: openfact-web-console
- kind: Route
  apiVersion: v1
  metadata:
    name: openfact-web-console
  spec:
    to:
      kind: Service
      name: openfact-web-console
# Openfact
- kind: Route
  apiVersion: v1
  metadata:
    name: openfact
    labels:
      app: openfact
  spec:
    to:
      kind: Service
      name: openfact
- kind: Service
  apiVersion: v1
  metadata:
    name: openfact
    labels:
      app: openfact
    annotations:
      service.alpha.openshift.io/dependencies: "[{\"name\": \"openfact-postgresql\", \"kind\": \"Service\"}]"
  spec:
    ports:
    - name: 8080-tcp
      port: 8080      
      targetPort: 8080
      protocol: TCP
    selector:
      app: openfact
- kind: Service
  apiVersion: v1
  metadata:
    name: openfact-postgresql
    labels:
      app: openfact
  spec:
    ports:
    - name: 5432-tcp      
      port: 5432
      targetPort: 5432
      protocol: TCP      
    selector:
      app: openfact-postgresql
    type: ClusterIP
    sessionAffinity: None
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: openfact
    labels:
      app: openfact
  spec:
    strategy:
      type: Rolling
      rollingParams:
        timeoutSeconds: 10800
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - openfact
        from:
          kind: ImageStreamTag
          name: openfact:latest
    replicas: 1
    selector:
      app: openfact
    template:
      metadata:
        name: openfact
        labels:
          app: openfact
      spec:
        containers:
        - name: openfact
          image: openfact:latest
          imagePullPolicy: Always
          lifecycle:
            preStop:
              exec:
                command:
                - "/opt/jboss/wildfly/bin/jboss-cli.sh"
                - "-c"
                - ":shutdown(timeout=60)"
          ports:
          - name: 8080-http
            containerPort: 8080
            protocol: TCP
          env:
          - name: KEYCLOAK_AUTH_SERVER_URL
            value: http://keycloak-${APPLICATION_NAME}.${DOMAIN_NAME}/auth
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: openfact-postgresql
                key: database-user
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: openfact-postgresql
                key: database-password
          - name: DB_DATABASE
            value: ${OPENFACT_DB_DATABASE}
          - name: DB_ADDR
            value: openfact-postgresql
        terminationGracePeriodSeconds: 75
        restartPolicy: Always
- kind: DeploymentConfig  
  apiVersion: v1
  metadata:
    name: openfact-postgresql
    labels:
      app: openfact
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - openfact-postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:${POSTGRESQL_VERSION}
          namespace: ${NAMESPACE}        
    replicas: 1
    selector:
      app: openfact-postgresql
    template:
      metadata:
        name: openfact-postgresql
        labels:
          app: openfact-postgresql
      spec:
        terminationGracePeriodSeconds: 60
        restartPolicy: Always
        dnsPolicy: ClusterFirst
        serviceAccountName: ${SERVICE_ACCOUNT_NAME}
        containers:
        - name: openfact-postgresql
          image: postgresql
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 5
            exec:
              command:
              - "/bin/sh"
              - "-i"
              - "-c"
              - "psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"
          livenessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 30
            tcpSocket:
              port: 5432
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: openfact-postgresql-pvol
          env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                name: openfact-postgresql
                key: database-user
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: openfact-postgresql
                key: database-password
          - name: POSTGRESQL_DATABASE
            value: ${OPENFACT_DB_DATABASE}
          terminationMessagePath: /dev/termination-log          
          securityContext:            
            privileged: false
        volumes:
        - name: openfact-postgresql-pvol
          persistentVolumeClaim:
            claimName: openfact-postgresql-claim
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: openfact
    labels:
      app: openfact
  spec:
    dockerImageRepository: openfact/openfact-postgres
- kind: Secret
  apiVersion: v1
  metadata:
    name: openfact-postgresql
  stringData:
    database-user: ${OPENFACT_DB_USERNAME}
    database-password: ${OPENFACT_DB_PASSWORD}
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: openfact-postgresql-claim
    labels:
      app: openfact
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${OPENFACT_VOLUME_CAPACITY}

# Keycloak
- kind: Route
  apiVersion: v1
  metadata:
    name: keycloak
    labels:
      app: keycloak      
  spec:
    to:
      kind: Service
      name: keycloak
- kind: Service
  apiVersion: v1
  metadata:
    name: keycloak
    labels:
      app: keycloak
    annotations:
      service.alpha.openshift.io/dependencies: "[{\"name\": \"keycloak-postgresql\", \"kind\": \"Service\"}]"
  spec:
    ports:
    - name: 8080-tcp
      port: 8080      
      targetPort: 8080
      protocol: TCP
    selector:
      app: keycloak
- kind: Service
  apiVersion: v1
  metadata:
    name: keycloak-postgresql
    labels:
      app: keycloak
  spec:
    ports:
    - name: 5432-tcp      
      port: 5432
      targetPort: 5432
      protocol: TCP      
    selector:
      app: keycloak-postgresql
    type: ClusterIP
    sessionAffinity: None
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: keycloak
    labels:
      app: keycloak
  spec:
    strategy:
      type: Rolling
      rollingParams:
        timeoutSeconds: 10800
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - keycloak
        from:
          kind: ImageStreamTag
          name: keycloak:latest
    replicas: 1
    selector:
      app: keycloak
    template:
      metadata:
        name: keycloak
        labels:
          app: keycloak
      spec:
        containers:
        - name: keycloak
          image: keycloak:latest
          imagePullPolicy: Always
          lifecycle:
            preStop:
              exec:
                command:
                - "/opt/jboss/keycloak/bin/jboss-cli.sh"
                - "-c"
                - ":shutdown(timeout=60)"
          ports:
          - name: 8080-http
            containerPort: 8080
            protocol: TCP
          env:
          - name: KEYCLOAK_USER
            valueFrom:
              secretKeyRef:
                name: keycloak
                key: admin-user
          - name: KEYCLOAK_PASSWORD
            valueFrom:
              secretKeyRef:
                name: keycloak
                key: admin-password
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: keycloak-postgresql
                key: database-user
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: keycloak-postgresql
                key: database-password
          - name: DB_DATABASE
            value: ${KEYCLOAK_DB_DATABASE}
          - name: DB_ADDR
            value: keycloak-postgresql
        terminationGracePeriodSeconds: 75
        restartPolicy: Always
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: keycloak-postgresql
    labels:
      app: keycloak
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - keycloak-postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:${POSTGRESQL_VERSION}
          namespace: ${NAMESPACE}        
    replicas: 1
    selector:
      app: keycloak-postgresql
    template:
      metadata:
        name: keycloak-postgresql
        labels:
          app: keycloak-postgresql
      spec:
        terminationGracePeriodSeconds: 60
        restartPolicy: Always
        dnsPolicy: ClusterFirst
        serviceAccountName: ${SERVICE_ACCOUNT_NAME}
        containers:
        - name: keycloak-postgresql
          image: postgresql
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 5
            exec:
              command:
              - "/bin/sh"
              - "-i"
              - "-c"
              - "psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"
          livenessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 30
            tcpSocket:
              port: 5432
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: keycloak-postgresql-pvol
          env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                name: keycloak-postgresql
                key: database-user
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: keycloak-postgresql
                key: database-password
          - name: POSTGRESQL_DATABASE
            value: ${KEYCLOAK_DB_DATABASE}
          terminationMessagePath: /dev/termination-log          
          securityContext:
            privileged: false
        volumes:
        - name: keycloak-postgresql-pvol
          persistentVolumeClaim:
            claimName: keycloak-postgresql-claim  
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: keycloak
    labels:
      app: keycloak
  spec:
    dockerImageRepository: openfact/keycloak-postgres
- kind: Secret
  apiVersion: v1
  metadata:
    name: keycloak
  stringData:
    admin-user: ${KEYCLOAK_ADMIN_USER}
    admin-password: ${KEYCLOAK_ADMIN_PASSWORD}
- kind: Secret
  apiVersion: v1
  metadata:
    name: keycloak-postgresql
  stringData:
    database-user: ${KEYCLOAK_DB_USERNAME}
    database-password: ${KEYCLOAK_DB_PASSWORD}
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: keycloak-postgresql-claim
    labels:
      app: keycloak
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${KEYCLOAK_VOLUME_CAPACITY}
parameters:
  - displayName: Domain Name
    description: Domain of your Openshift installation.
    name: DOMAIN_NAME
    value: apps.console.sistcoop.org
    required: true
  - displayName: Application Name
    description: The name for the application.
    name: APPLICATION_NAME
    value: openfact
    required: true
  - displayName: Openfact Version
    description: The version of the openfact
    name: OPENFACT_VERSION
    value: latest
    required: true
  - displayName: PostgreSQL Image Version
    description: The version of the PostgreSQL image
    name: POSTGRESQL_VERSION
    value: "9.5"
    required: true
  - displayName: ImageStream Namespace
    description: Namespace in which the ImageStreams images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.
    name: NAMESPACE
    value: openshift
    required: true
  - displayName: Service Account Name
    description: The name of the service account to use for the deployment.  The service account should be configured to allow useage of the secret(s) specified by HTTPS_SECRET and JGROUPS_ENCRYPT_SECRET.
    name: SERVICE_ACCOUNT_NAME
    value: openfact-service-account
    required: true
  
  # Openfact-Web-Console
  - description: Keycloak Realm (Openfact Web Console)
    displayName: Keycloak Realm where the openfact-web-console client will be deployed
    name: KEYCLOAK_REALM
    value: openfact
    required: true
  - description: Keycloak Client Id (Openfact Web Console)
    displayName: Keycloak Cliend Id of openfact-web-console
    name: KEYCLOAK_CLIENT_ID
    value: openfact-web-console
    required: true
  - description: Keycloak Public Key (Openfact Web Console)
    displayName: Keycloak Public Key, this will be used to create a new client if is required
    name: KEYCLOAK_PUBLIC_KEY

  # Keycloak
  - displayName: Keycloak Admin Username (Keycloak Server)
    description: Keycloak Server Admin username
    name: KEYCLOAK_ADMIN_USER
    from: "[a-zA-Z0-9]{8}"
    generate: expression
    required: true
  - displayName: Keycloak Admin Password (Keycloak Server)
    description: Keycloak Server Admin  password
    name: KEYCLOAK_ADMIN_PASSWORD
    from: "[a-zA-Z0-9]{8}"
    generate: expression
    required: true  
  - displayName: Keycloak Database Name (Keycloak Server)
    description: Database name
    name: KEYCLOAK_DB_DATABASE
    value: keycloak
    required: true
  - displayName: Keycloak Database Username (Keycloak Server)
    description: Database user name
    name: KEYCLOAK_DB_USERNAME
    from: "user[a-zA-Z0-9]{3}"
    generate: expression
    required: true
  - displayName: Keycloak Database Password (Keycloak Server)
    description: Database user password
    name: KEYCLOAK_DB_PASSWORD
    from: "user[a-zA-Z0-9]{3}"
    generate: expression
    required: true
  - displayName: Keycloak Database Volume Capacity (Keycloak Server)
    description: Size of persistent storage for database volume.
    name: KEYCLOAK_VOLUME_CAPACITY
    value: "512Mi"
    required: true

  # Openfact
  - displayName: Openfact Database Name (Openfact Server)
    description: Database name
    name: OPENFACT_DB_DATABASE
    value: openfact
    required: true
  - displayName: Openfact Database Username (Openfact Server)
    description: Database user name
    name: OPENFACT_DB_USERNAME
    from: "user[a-zA-Z0-9]{3}"
    generate: expression
    required: true
  - displayName: Openfact Database Password (Openfact Server)
    description: Database user password
    name: OPENFACT_DB_PASSWORD
    from: "user[a-zA-Z0-9]{3}"
    generate: expression
    required: true
  - displayName: Openfact Database Volume Capacity (Openfact Server)
    description: Size of persistent storage for database volume.
    name: OPENFACT_VOLUME_CAPACITY
    value: "512Mi"
    required: true