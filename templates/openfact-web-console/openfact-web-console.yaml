apiVersion: v1
kind: Template
labels:
  demo: coolstore-microservice
  template: coolstore
metadata:
  annotations:
    description: CoolStore demo microservices application template
    iconClass: icon-java
    tags: microservice,jboss,spring
  name: coolstore
objects:
- apiVersion: v1
  groupNames: null
  kind: RoleBinding
  metadata:
    name: default_edit
  roleRef:
    name: view
  subjects:
  - kind: ServiceAccount
    name: default
# UI
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: web-ui
    labels:
      application: web-ui
  spec:
    tags:
    - name: latest
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: web-ui
    labels:
      application: web-ui
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: web-ui:latest
    source:
      git:
        ref: ${GIT_REF}
        uri: ${GIT_URI}
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: NPM_MIRROR
          value: ${NPM_MIRROR}
        - name: BOWER_MIRROR
          value: ${BOWER_MIRROR}
        from:
          kind: ImageStreamTag
          name: nodejs:4
          namespace: openshift
      type: Source
    triggers:
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: web-ui
    labels:
      application: web-ui
  spec:
    replicas: 1
    selector:
      application: web-ui
      deploymentconfig: web-ui
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          application: web-ui
          deploymentconfig: web-ui
      spec:
        containers:
        - env:
          - name: OPENFACT_SERVICE
            value: openfact
          - name: HOSTNAME_HTTP
            value: web-ui:8080
          image: web-ui
          imagePullPolicy: Always
          name: web-ui
          ports:
          - containerPort: 8080
            protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - web-ui
        from:
          kind: ImageStreamTag
          name: web-ui:latest
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: web-ui
      application: web-ui
    name: web-ui
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: web-ui
- apiVersion: v1
  kind: Route
  metadata:
    name: web-ui
  spec:
    to:
      kind: Service
      name: web-ui
parameters:
- description: Git source URI for application
  displayName: Git source repository
  name: GIT_URI
  required: true
  value: https://github.com/openfact/openfact-web-console.git
- displayName: Git branch/tag reference
  name: GIT_REF
  required: true
  value: master
- description: Maven mirror url. If nexus is deployed locally, use nexus url (e.g. http://nexus.ci:8081/content/groups/public/)
  displayName: Maven mirror url
  name: MAVEN_MIRROR_URL
- description: NPM mirror url. If nexus is deployed locally, use nexus url (e.g. http://nexus.ci:8081/repository/npm/)
  displayName: NPM mirror url
  name: NPM_MIRROR
- description: Bower mirror url. If nexus is deployed locally, use nexus url (e.g. http://nexus.ci:8081/repository/bower-mirror/)
  displayName: Bower mirror url
  name: BOWER_MIRROR
- description: Inventory Service database user name
  displayName: Inventory Database username
  from: user[a-zA-Z0-9]{3}
  generate: expression
  name: INVENTORY_DB_USERNAME
  required: true
- description: Inventory Service database user password
  displayName: Inventory Database password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: INVENTORY_DB_PASSWORD
  required: true
- description: Catalog Service database user name
  displayName: Catalog Database username
  from: user[a-zA-Z0-9]{3}
  generate: expression
  name: CATALOG_DB_USERNAME
  required: true
- description: Catalog Service database user password
  displayName: Catalog Database password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: CATALOG_DB_PASSWORD
  required: true
- description: Decision Server Username
  name: KIE_SERVER_USER
  required: true
  value: brmsAdmin
- description: Decision Server Password
  from: '[a-zA-Z]{6}[0-9]{1}!'
  generate: expression
  name: KIE_SERVER_PASSWORD
  required: true
- description: Decision Server Coolstore Rules Container Spec
  name: KIE_CONTAINER_DEPLOYMENT
  required: true
  value: CoolStoreRulesContainer=com.redhat:coolstore:2.0.0